service: traxion-challenge

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  profile: AWSLemus
  stage: ${opt:stage, 'dev'}
  apiGateway:
    apiKeys:
      - name: ${self:service}_${self:provider.stage}
  environment:
    SHORTENER_TABLE_NAME: ${self:service}_SHORTENER_${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - { "Fn::GetAtt": [ "ShortenerTable", "Arn" ] }

functions:
  createShortcode:
    handler: src.functions.create_shortcode.handler.create_shortcode
    events:
      - http:
          method: POST
          path: /
          private: true
          request:
            schemas:
              application/json: ${file(./src/functions/create_shortcode/schema.json)}

  resolveShortcode:
    handler: src.functions.resolve_shortcode.handler.resolve_shortcode
    events:
      - http:
          method: GET
          path: /{shortcode}
          private: true

resources:
  Resources:
    ShortenerTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: code
            AttributeType: S
        KeySchema:
          - AttributeName: code
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.SHORTENER_TABLE_NAME}

plugins:
  - serverless-python-requirements
  - serverless-offline